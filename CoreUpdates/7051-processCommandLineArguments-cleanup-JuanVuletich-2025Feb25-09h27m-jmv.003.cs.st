'From Cuis7.3 [latest update: #7036] on 25 February 2025 at 10:09:58 am'!

!SystemDictionary methodsFor: 'startup' stamp: 'jmv 2/25/2025 09:41:44'!
processCommandLineArguments: initialOptions
	"
	Smalltalk processCommandLineArguments: true
	Smalltalk processCommandLineArguments: false

	Note: By default, any exceptions thrown during the evaluation of arguments are simply ignored.
	To ease debugging, use the -e argument: Do Not Ignore Exceptions. 
	For example:
		squeak Cuis.image -e -s myScript.st
	If ``myScript.st`` contains an error, a Debugger will pop up.
	
	See comment at
		processInitialCommandLineOption:optionArgument:
		processFinalCommandLineOption:optionArgument:raiseExceptions:
	See displayCommandLineUsageOn:
	"
	| optionString optionArgument optionIndex nextOptionIndex optionLastParameterIndex raiseExceptions dashFinder |

	"Any command line argument that starts with $- is an Option.
	non-Option arguments are parameters for the preceding Option."
	raiseExceptions := false.
	startUpScriptArguments := #().
	"Empty Strings are valid command line arguments, generated by two double quotes. Handle them."
	dashFinder := [ :any | any size > 1 and: [ any first == $- ] ].
	optionIndex := startUpArguments findFirst: dashFinder startingAt: 1.
	[ optionIndex > 0 ] whileTrue:
	[
		"Find parameters for this option. Find the next option after this one."
		nextOptionIndex := startUpArguments findFirst: dashFinder startingAt: optionIndex+1.
		optionLastParameterIndex := nextOptionIndex = 0
			ifTrue: [startUpArguments size]
			ifFalse: [nextOptionIndex-1].
			
		optionString := startUpArguments at: optionIndex.
		optionString = '--' 						"Including    --    as an option means 'ignore everything after here'"
			ifTrue: [^self].
		optionString = '-e'
			ifTrue: [ raiseExceptions := true ]
			ifFalse:
			[
				optionArgument := optionLastParameterIndex > optionIndex ifTrue: [startUpArguments at: optionIndex+1].
				"optionArgument (at: optionIndex+1) would be the startUpScript fileName. It's arguments follow."
				startUpScriptArguments := startUpArguments copyFrom: optionIndex+2 to: optionLastParameterIndex.
				initialOptions
					ifTrue: [ self processInitialCommandLineOption: optionString optionArgument: optionArgument ]
					ifFalse: [ self processFinalCommandLineOption: optionString optionArgument: optionArgument raiseExceptions: raiseExceptions ].
				startUpScriptArguments := #().
			].
		optionIndex := nextOptionIndex.
	].! !

